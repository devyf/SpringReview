<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置目标类-->
    <bean id="target" class="com.fengye.aop.Target"></bean>
    <!--配置切面类-->
    <bean id="myAspect" class="com.fengye.aop.MyAspect"></bean>
    <!--配置织入：告诉Spring框架哪些方法需要进行哪些增强（前置、后置）-->
    <aop:config>
        <!--声明切面-->
        <aop:aspect ref="myAspect">
            <!--抽取切点表达式-->
            <aop:pointcut id="commonPointcut" expression="execution(* com.fengye.aop.*.*(..))"></aop:pointcut>
            <!--切面：切点+通知（即save()方法需要执行前置before增强，增强方法为before，增强方法before在MyAspect类中）-->
            <!--具体引用公共切点表达式：pointcut-ref-->
            <aop:before method="before" pointcut-ref="commonPointcut"></aop:before>
            <aop:after-returning method="afterReturning" pointcut="execution(* com.fengye.aop.*.*(..))"></aop:after-returning>
            <aop:around method="around" pointcut="execution(* com.fengye.aop.*.*(..))"></aop:around>
            <!--当有异常时执行此方法-->
            <aop:after-throwing method="afterThrowing" pointcut="execution(* com.fengye.aop.*.*(..))"></aop:after-throwing>
            <!--最终增强：不管有无异常，始终会执行此类方法-->
            <aop:after method="after" pointcut="execution(* com.fengye.aop.*.*(..))"></aop:after>
        </aop:aspect>
    </aop:config>

</beans>